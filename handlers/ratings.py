from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from config.keyboards.markups import reply_keyboard, ratings_keyboard
from .common import cancel_state
from config.ratings import (
    QS_WORLD_UNIVERSITY_RANKINGS_2022,
    TIMES_HIGHER_EDUCATION_WORLD_UNIVERSITY_RANKINGS_2022,
)
from FSM.ratings import RatingForm


async def start_fsm_for_rating(message: types.Message, state=FSMContext) -> None:
    """–ù–∞—á–∞–Ω–∞–µ—Ç –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –≤—É–∑–æ–≤"""
    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await cancel_state(state)
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ "–û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞"
    await RatingForm.rating_wait.set()
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    buttons = (
        "QS World University Rankings ‚Äì 2022",
        "Times Higher Education World University Rankings ‚Äì 2022",
    )
    keyboard = ratings_keyboard(*buttons)
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await message.answer(
        "–í—ã–±–µ—Ä–∏, –∫–∞–∫–æ–π —Ä–µ–π—Ç–∏–Ω–≥ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å",
        reply_markup=keyboard,
    )


async def process_rating_invalid(message: types.Message) -> None:
    """–°–æ–æ–±—â–∞–µ—Ç –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ"""
    return await message.reply("–¢–∞–∫–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞ —É –º–µ–Ω—è –Ω–µ—Ç :(\n–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ")


async def process_rating(message: types.Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤—É–∑–æ–≤ –∏ –≤—ã–≤–æ–¥–∏—Ç –µ–≥–æ"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∫–∞–∫–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞–¥–æ –ø–æ–∫–∞–∑–∞—Ç—å
    rating_to_show = (
        QS_WORLD_UNIVERSITY_RANKINGS_2022
        if message.text == "QS World University Rankings ‚Äì 2022"
        else TIMES_HIGHER_EDUCATION_WORLD_UNIVERSITY_RANKINGS_2022
    )
    answer = f"–†–µ–π—Ç–∏–Ω–≥ {message.text}:\n"
    # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–º —Å–ø–∏—Å–∫–∞–º —Ä–µ–π—Ç–∏–Ω–≥–∞
    for rating in rating_to_show:
        # –ü–æ–ª—É—á–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –≤—É–∑–∞
        university_name = rating[0]
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –≤—É–∑–∞ –≤ –º–∏—Ä–µ
        university_global = rating[1]
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –≤—É–∑–∞ –≤ –†–æ—Å—Å–∏–∏
        university_local = rating[2]
        answer += f"\n\n{university_name} -" f" {university_global} –º–µ—Å—Ç–æ –≤ –º–∏—Ä–µ," f" {university_local} –º–µ—Å—Ç–æ –≤ –†–æ—Å—Å–∏–∏"
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await message.answer(
        answer,
        reply_markup=reply_keyboard(),
    )


def register_ratings_handlers(dp: Dispatcher):
    dp.register_message_handler(
        start_fsm_for_rating,
        commands="rating",
        state="*",
    )
    dp.register_message_handler(
        start_fsm_for_rating,
        lambda message: message.text in ["–†–µ–π—Ç–∏–Ω–≥–∏ –≤—É–∑–æ–≤ üîù"],
        state="*",
    )
    dp.register_message_handler(
        start_fsm_for_rating,
        lambda message: message.text in ["–ó–∞–Ω–æ–≤–æ"],
        state=RatingForm.rating_wait,
    )
    dp.register_message_handler(
        process_rating_invalid,
        lambda message: message.text
        not in [
            "QS World University Rankings ‚Äì 2022",
            "Times Higher Education World University Rankings ‚Äì 2022",
        ],
        state=RatingForm.rating_wait,
    )
    dp.register_message_handler(
        process_rating,
        lambda message: message.text
        in [
            "QS World University Rankings ‚Äì 2022",
            "Times Higher Education World University Rankings ‚Äì 2022",
        ],
        state=RatingForm.rating_wait,
    )
