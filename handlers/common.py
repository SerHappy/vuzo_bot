from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from config.keyboards.markups import menu_keyboard


async def cancel_state(state=FSMContext):
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —Ö—Ä–∞–Ω—è—â–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ"""
    current_state = await state.get_state()
    if current_state is not None:
        await state.finish()


async def send_welcome_message(message: types.Message, state=FSMContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await cancel_state(state)
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await message.answer(
        (
            f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–Ø –±—É–¥—É —Ç–≤–æ–∏–º "
            "–ø—É—Ç–µ–≤–æ–¥–∏—Ç–µ–ª–µ–º –≤ –º–∏—Ä –≤—É–∑–æ–≤.\n–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏—â–µ—Ç "
            "–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤—ã—Å—à–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—á–µ–±–Ω—ã—Ö "
            "–∑–∞–≤–µ–¥–µ–Ω–∏–π –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Ç–µ–±–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –º–µ—Å—Ç–æ–º, –≥–¥–µ —Ç—ã –ø—Ä–æ–≤–µ–¥—ë—à—å "
            "–±–ª–∏–∂–∞–π—à–∏–µ 4 –≥–æ–¥–∞. –ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –≤—Å—é –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ç–µ–±—è "
            "–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: –æ—Ç –Ω–∞–ª–∏—á–∏—è –æ–±—â–µ–∂–∏—Ç–∏–π –¥–æ –ø—Ä–æ—Ö–æ–¥–Ω—ã—Ö –±–∞–ª–ª–æ–≤.\n"
            "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤—Å–µ –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–±—Ä–∞–≤ /menu, "
            "–∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —à–∞–±–ª–æ–Ω–∞–º–∏ –Ω–∏–∂–µ, –∏ —Å–∫–æ—Ä–µ–µ –±–µ—Ä–∏ –∫—É—Ä—Å –Ω–∞ –≤—É–∑!"
        ),
        reply_markup=menu_keyboard("dfdfdfd"),
    )


async def main_menu(message: types.Message, state=FSMContext) -> None:
    """–ü—Ä–µ–∫—Ä–∞—â–∞–µ –ª—é–±–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await cancel_state(state)
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await message.answer(
        (
            "–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n"
            "/start - –ø—Ä–∏–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "/menu - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/ege - –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –±–∞–ª–ª–æ–≤ –ï–ì–≠\n"
            "/rating - –†–µ–π—Ç–∏–Ω–≥ –≤—É–∑–æ–≤\n"
            "/test - –¢–µ—Å—Ç –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏\n"
            "–¢–∞–∫ –∂–µ –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π :)\n"
            "(PS: –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–µ–∫—Ä–∞—â–∞—é—Ç —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏ –Ω–∞—á–∏–Ω–∞—é—Ç –Ω–æ–≤–æ–µ, "
            "—Ç–∞–∫ —á—Ç–æ –±—É—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω –ø—Ä–∏ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏!"
        ),
        reply_markup=menu_keyboard(),
    )


async def empty(message: types.Message) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–æ—Ç–ª–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã/—Å–æ–æ–±—â–µ–Ω–∏—è"""
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
    await message.answer(
        "–ù–µ–∏–∑–≤–µ—Å—Ç—ã–π —Ç–µ–∫—Å—Ç.\n–í–≤–µ–¥–∏—Ç–µ /menu –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"
    )


def register_common_handlers(dp: Dispatcher):
    dp.register_message_handler(
        main_menu,
        commands=["menu"],
        state="*",
    )
    dp.register_message_handler(
        main_menu,
        lambda message: message.text.lower()
        in ["–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "–º–µ–Ω—é", "–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é üîô", "–Ω–∞–∑–∞–¥"],
        state="*",
    )
    dp.register_message_handler(
        send_welcome_message, commands=["start", "help"], state="*"
    )


def register_empty_handler(dp: Dispatcher):
    dp.register_message_handler(empty, state="*")
